# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: skaffold/v1beta2
kind: Config
build:
  artifacts:
  # image tags are relative; to specify an image repo (e.g. GCR), you
  # must provide a "default repo" using one of the methods described
  # here:
  # https://skaffold.dev/docs/concepts/#image-repository-handling
  - image: emailservice
    context: src/emailservice
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
        NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
  - image: productcatalogservice
    context: src/productcatalogservice
    docker:
      buildArgs:
        OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:4317"
  - image: recommendationservice
    context: src/recommendationservice
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
        NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
  - image: shippingservice
    context: src/shippingservice
    docker:
      buildArgs:
        JAEGER_SERVICE_ADDR: otel-collector:14268
  - image: checkoutservice
    context: src/checkoutservice
    docker:
      buildArgs:
        JAEGER_SERVICE_ADDR: otel-collector:14268
  - image: paymentservice
    context: src/paymentservice
    docker:
          buildArgs:
            NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
            NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
            NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
            OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:4317"
            NEW_RELIC_DEMO_EXPORT_TYPE: "{{.NEW_RELIC_DEMO_EXPORT_TYPE}}"
  - image: currencyservice
    context: src/currencyservice
    docker:
          buildArgs:
            NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
            NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
            NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
            OTEL_EXPORTER_OTLP_SPAN_ENDPOINT: "otel-collector:4317"
            NEW_RELIC_DEMO_EXPORT_TYPE: "{{.NEW_RELIC_DEMO_EXPORT_TYPE}}"
  - image: cartservice
    context: src/cartservice
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        OTEL_EXPORTER_OTLP_ENDPOINT: "{{.OTEL_EXPORTER_OTLP_ENDPOINT}}"
  - image: frontend
    context: src/frontend
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
        NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
  - image: loadgenerator
    context: src/loadgenerator
  - image: adservice
    context: src/adservice
    docker:
      buildArgs:
        OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
  - image: otel-collector
    context: src/otel-collector
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        NEW_RELIC_TRACE_URL: "{{.NEW_RELIC_TRACE_URL}}"
        NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
        OTEL_EXPORTER_OTLP_SPAN_ENDPOINT_NO_SCHEME: "{{.OTEL_EXPORTER_OTLP_SPAN_ENDPOINT_NO_SCHEME}}"
  - image: otel-system
    context: src/otel-system
    docker:
      buildArgs:
        NEW_RELIC_API_KEY: "{{.NEW_RELIC_API_KEY}}"
        NEW_RELIC_METRIC_URL: "{{.NEW_RELIC_METRIC_URL}}"
  tagPolicy:
    gitCommit: {}
  local:
    useBuildkit: false
deploy:
  kubectl:
    manifests:
    - ./kubernetes-manifests/**.yaml
profiles:
# "gcb" profile allows building and pushing the images
# on Google Container Builder without requiring docker
# installed on the developer machine. However, note that
# since GCB does not cache the builds, each build will
# start from scratch and therefore take a long time.
#
# This is not used by default. To use it, run:
#     skaffold run -p gcb
- name: gcb
  build:
    googleCloudBuild:
      diskSizeGb: 300
      machineType: N1_HIGHCPU_32
      timeout: 4000s
